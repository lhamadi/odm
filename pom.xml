<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.odm</groupId>
    <artifactId>odmSimulation</artifactId>
    <packaging>pom</packaging>
    <version>0.1-SNAPSHOT</version>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <project.scm.id>DH_BETA_Git</project.scm.id>
        <scala.version>2.11</scala.version>
        <scala.version.full>${scala.version}.8</scala.version.full>
        <akka.version>2.5.7</akka.version>
        <kafka.version>1.0.0</kafka.version>
        <cucumber.version>2.1.0</cucumber.version>
        <avro4s.version>1.8.0</avro4s.version>
        <encoding>UTF-8</encoding>
        <jackson.version>2.9.2</jackson.version>
        <maven.jar.plugin.version>3.0.2</maven.jar.plugin.version>
        <flink.version>1.4.0</flink.version>
        <confluent.version>4.0.0</confluent.version>
        <skip.tests.it>false</skip.tests.it>
        <hadoop-common.version>2.7.1</hadoop-common.version>
        <spark.version>2.2.0</spark.version>
        <scopt.version>3.3.0</scopt.version>
        <kafka.avro.version>3.2.0</kafka.avro.version>
        <apache.http.version>4.5.4</apache.http.version>
        <apache.common.version>3.7</apache.common.version>
        <mockito.version>2.13.1</mockito.version>
        <mock.http.version>4.1</mock.http.version>
        <scalatest>2.2.6</scalatest>
        <spark-streaming-kafka.version>1.6.3</spark-streaming-kafka.version>
        <sprak.testing.base.version>0.8.0</sprak.testing.base.version>
        <typesafe.version>1.2.1</typesafe.version>
        <json4s.version>3.6.0-M2</json4s.version>
        <confluent.maven.repo>http://packages.confluent.io/maven/</confluent.maven.repo>

    </properties>

    <modules>
        <module>common</module>
    </modules>

    <dependencyManagement>
        <dependencies>
            <!-- https://mvnrepository.com/artifact/com.github.mrpowers/spark-fast-tests -->
            <dependency>
                <groupId>com.github.mrpowers</groupId>
                <artifactId>spark-fast-tests_2.11</artifactId>
                <version>0.11.0</version>
                <scope>test</scope>
            </dependency>

            <!-- https://mvnrepository.com/artifact/org.projectlombok/lombok -->
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>1.18.6</version>
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>com.bnpparibas</groupId>
                <artifactId>common</artifactId>
                <version>0.1-SNAPSHOT</version>
            </dependency>

            <dependency>
                <groupId>commons-cli</groupId>
                <artifactId>commons-cli</artifactId>
                <version>1.2</version>
                <scope>compile</scope>
            </dependency>

            <dependency>
                <groupId>org.apache.spark</groupId>
                <artifactId>spark-core_${scala.version}</artifactId>
                <version>${spark.version}</version>
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>org.apache.spark</groupId>
                <artifactId>spark-sql_${scala.version}</artifactId>
                <version>${spark.version}</version>
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>org.scala-lang</groupId>
                <artifactId>scala-library</artifactId>
                <version>${scala.version.full}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.spark</groupId>
                <artifactId>spark-streaming-kafka-0-10_${scala.version}</artifactId>
                <version>${spark.version}</version>
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>com.typesafe</groupId>
                <artifactId>config</artifactId>
                <version>${typesafe.version}</version>
            </dependency>

            <!-- https://mvnrepository.com/artifact/org.apache.kafka/kafka -->
            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>kafka_2.12</artifactId>
                <version>1.1.0</version>
            </dependency>

            <dependency>
                <groupId>info.cukes</groupId>
                <artifactId>cucumber-java</artifactId>
                <version>1.1.5</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>info.cukes</groupId>
                <artifactId>cucumber-scala_2.12</artifactId>
                <scope>test</scope>
                <version>1.2.5</version>
            </dependency>

            <dependency>
                <groupId>info.cukes</groupId>
                <artifactId>cucumber-jvm</artifactId>
                <version>1.1.5</version>
                <type>pom</type>
            </dependency>

            <dependency>
                <groupId>info.cukes</groupId>
                <artifactId>cucumber-junit</artifactId>
                <version>1.1.5</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>info.cukes</groupId>
                <artifactId>cucumber-jvm-deps</artifactId>
                <scope>test</scope>
                <version>1.0.5</version>
            </dependency>

            <dependency>
                <groupId>net.masterthought</groupId>
                <artifactId>cucumber-reporting</artifactId>
                <scope>test</scope>
                <version>1.0.0</version>
            </dependency>

            <dependency>
                <groupId>info.cukes</groupId>
                <artifactId>gherkin</artifactId>
                <scope>test</scope>
                <version>2.12.2</version>
            </dependency>

            <dependency>
                <groupId>info.cukes</groupId>
                <artifactId>cucumber-scala_2.12</artifactId>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${apache.common.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpclient</artifactId>
                <version>${apache.http.version}</version>
            </dependency>

            <dependency>
                <groupId>com.twitter</groupId>
                <artifactId>bijection-avro_${scala.version}</artifactId>
                <version>0.9.6</version>
            </dependency>

            <dependency>
                <groupId>io.reactivex</groupId>
                <artifactId>rxscala_${scala.version}</artifactId>
                <version>0.26.5</version>
            </dependency>

            <dependency>
                <groupId>com.github.scopt</groupId>
                <artifactId>scopt_${scala.version}</artifactId>
                <version>3.7.0</version>
            </dependency>

            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-clients_${scala.version}</artifactId>
                <version>${flink.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-connector-kafka-0.10_${scala.version}</artifactId>
                <version>${flink.version}</version>
            </dependency>

            <dependency>
                <groupId>io.confluent</groupId>
                <artifactId>kafka-avro-serializer</artifactId>
                <version>${confluent.version}</version>
            </dependency>


            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>kafka-clients</artifactId>
                <version>${kafka.version}</version>
            </dependency>


            <dependency>
                <groupId>io.confluent</groupId>
                <artifactId>kafka-connect-avro-converter</artifactId>
                <version>${confluent.version}</version>
            </dependency>

            <dependency>
                <groupId>io.confluent</groupId>
                <artifactId>kafka-schema-registry-client</artifactId>
                <version>${confluent.version}</version>
            </dependency>

            <dependency>
                <groupId>org.json4s</groupId>
                <artifactId>json4s-jackson_${scala.version}</artifactId>
                <version>${json4s.version}</version>
            </dependency>

            <dependency>
                <groupId>io.confluent</groupId>
                <artifactId>common-config</artifactId>
                <version>${confluent.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>connect-api</artifactId>
                <version>${kafka.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-java</artifactId>
                <version>${flink.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-streaming-java_${scala.version}</artifactId>
                <version>${flink.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-test-utils_${scala.version}</artifactId>
                <version>${flink.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-test-utils-junit</artifactId>
                <version>${flink.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-optimizer_${scala.version}</artifactId>
                <version>${flink.version}</version>
            </dependency>

            <dependency>
                <groupId>com.sksamuel.avro4s</groupId>
                <artifactId>avro4s-core_${scala.version}</artifactId>
                <version>1.8.0</version>
            </dependency>

            <dependency>
                <groupId>tech.allegro.schema.json2avro</groupId>
                <artifactId>converter</artifactId>
                <version>0.2.5</version>
            </dependency>

            <dependency>
                <groupId>org.codehaus.groovy</groupId>
                <artifactId>groovy-json</artifactId>
                <version>2.4.13</version>
            </dependency>

            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-all</artifactId>
                <scope>test</scope>
                <version>2.0.2-beta</version>
            </dependency>

            <dependency>
                <groupId>org.mvel</groupId>
                <artifactId>mvel2</artifactId>
                <version>2.2.4.Final</version>
            </dependency>

            <dependency>
                <groupId>org.apache.avro</groupId>
                <artifactId>avro</artifactId>
                <version>1.8.2</version>
            </dependency>

            <dependency>
                <groupId>org.mvel</groupId>
                <artifactId>mvel2</artifactId>
                <version>2.4.0.Final</version>
            </dependency>

            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>kafka_${scala.version}</artifactId>
                <version>1.0.0</version>
            </dependency>

            <!-- https://mvnrepository.com/artifact/org.apache.spark/spark-streaming-kafka -->
            <dependency>
                <groupId>org.apache.spark</groupId>
                <artifactId>spark-streaming-kafka_${scala.version}</artifactId>
                <version>1.6.3</version>
            </dependency>

            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-annotations</artifactId>
                <version>2.9.0</version>
            </dependency>

            <dependency>
                <groupId>com.fasterxml.jackson.dataformat</groupId>
                <artifactId>jackson-dataformat-avro</artifactId>
                <version>2.9.0</version>
                <exclusions>
                    <exclusion>
                        <groupId>ch.qos.logback</groupId>
                        <artifactId>logback-core</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>slf4j-log4j12</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <!-- TESTS -->
            <dependency>
                <groupId>org.scalamock</groupId>
                <artifactId>scalamock-scalatest-support_${scala.version}</artifactId>
                <version>3.6.0</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.scalatest</groupId>
                <artifactId>scalatest_${scala.version}</artifactId>
                <version>${scalatest}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>4.13.1</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>com.github.kristofa</groupId>
                <artifactId>mock-http-server</artifactId>
                <version>${mock.http.version}</version>
                <scope>test</scope>
            </dependency>

            <!-- <dependency>
                 <groupId>com.github.kristofa</groupId>
                 <artifactId>mock-http-server</artifactId>
                 <version>${mock.http.version}</version>
                 <scope>test</scope>
             </dependency>
             !-->
        </dependencies>
    </dependencyManagement>

    <reporting>
        <plugins>

        </plugins>
    </reporting>

    <build>

        <sourceDirectory>src/main/scala</sourceDirectory>
        <testSourceDirectory>src/test/scala</testSourceDirectory>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
            </resource>
            <resource>
                <directory>src/test/resources</directory>
            </resource>
        </resources>

        <pluginManagement>
            <plugins>
                <!-- Configure maven-compiler-plugin to use the desired Java version -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.8.0</version>
                    <configuration>
                        <source>1.8</source>
                        <target>1.8</target>
                        <verbose>true</verbose>
                    </configuration>
                </plugin>

                <!-- Use build-helper-maven-plugin to add Scala source and test source directories -->
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>3.0.0</version>
                    <executions>
                        <execution>
                            <id>add-source</id>
                            <phase>generate-sources</phase>
                            <goals>
                                <goal>add-source</goal>
                            </goals>
                            <configuration>
                                <sources>
                                    <source>src/main/scala</source>
                                </sources>
                            </configuration>
                        </execution>
                        <execution>
                            <id>add-test-source</id>
                            <phase>generate-test-sources</phase>
                            <goals>
                                <goal>add-test-source</goal>
                            </goals>
                            <configuration>
                                <sources>
                                    <source>src/test/scala</source>
                                </sources>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <!-- Use scala-maven-plugin for Scala support -->
                <plugin>
                    <groupId>net.alchim31.maven</groupId>
                    <artifactId>scala-maven-plugin</artifactId>
                    <version>3.2.2</version>
                    <configuration>
                        <recompileMode>incremental</recompileMode>
                    </configuration>
                    <executions>
                        <execution>
                            <id>compile</id>
                            <goals>
                                <goal>compile</goal>
                            </goals>
                            <phase>compile</phase>
                        </execution>
                        <execution>
                            <id>test-compile</id>
                            <goals>
                                <goal>testCompile</goal>
                            </goals>
                            <phase>test-compile</phase>
                        </execution>
                        <execution>
                            <phase>process-resources</phase>
                            <goals>
                                <goal>compile</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>


                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>3.0.0</version>
                    <executions>
                        <execution>
                            <phase>generate-sources</phase>
                            <goals>
                                <goal>add-source</goal>
                            </goals>
                            <configuration>
                                <sources>
                                    <source>src/main/java</source>
                                </sources>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <!-- scala assembly-->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>2.4</version>

                    <executions>

                        <execution>
                            <id>fat-jar</id>
                            <configuration>
                                <descriptorRefs>
                                    <descriptorRef>jar-with-dependencies</descriptorRef>
                                </descriptorRefs>
                            </configuration>
                            <phase>package</phase>
                            <goals>
                                <goal>single</goal>
                            </goals>
                        </execution>

                        <execution>
                            <id>create-package</id>
                            <configuration>
                                <descriptors>
                                    <descriptor>src/assembly/dep.xml</descriptor>
                                </descriptors>
                            </configuration>
                            <phase>package</phase>
                            <goals>
                                <goal>single</goal>
                            </goals>
                        </execution>

                    </executions>
                </plugin>

                <!-- disable surefire -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>2.7</version>
                    <configuration>
                        <skipTests>false</skipTests>
                        <environmentVariables>
                            <HADOOP_USER_NAME>root</HADOOP_USER_NAME>
                        </environmentVariables>
                        <includes>
                            <exclude>**/*BDDTest.java</exclude>
                        </includes>
                    </configuration>
                    <executions>
                        <execution>
                            <id>default-test</id>
                            <phase>test</phase>
                            <goals>
                                <goal>test</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <!-- enable scalatest -->
                <plugin>
                    <groupId>org.scalatest</groupId>
                    <artifactId>scalatest-maven-plugin</artifactId>
                    <version>2.0.0</version>
                    <configuration>
                        <reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
                        <junitxml>.</junitxml>
                        <filereports>WDF TestSuite.txt</filereports>
                    </configuration>
                    <executions>
                        <execution>
                            <id>test</id>
                            <goals>
                                <goal>test</goal>
                            </goals>
                            <configuration>
                                <suffixes>(?&lt;!Integration)(Test)</suffixes>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>2.12</version>
                    <executions>
                        <execution>
                            <id>integration-test</id>
                            <goals>
                                <goal>integration-test</goal>
                                <goal>verify</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

            </plugins>
        </pluginManagement>
    </build>

    <repositories>
        <repository>
            <id>confluent</id>
            <name>Confluent</name>
            <url>${confluent.maven.repo}</url>
        </repository>
    </repositories>

    <distributionManagement>
        <repository>
            <id>DH_BETA_Nexus</id>
            <name>DH_BETA_Nexus</name>
            <url>http://crm-nexus.itg.echonet/nexus/content/repositories/DH_BETA_Repo/</url>
        </repository>
        <snapshotRepository>
            <id>DH_BETA_Nexus_Snapshots</id>
            <name>DH_BETA_Nexus_Snapshots</name>
            <url>http://crm-nexus.itg.echonet/nexus/content/repositories/DH_BETA_Snapshots_Repo/</url>
        </snapshotRepository>
    </distributionManagement>
</project>